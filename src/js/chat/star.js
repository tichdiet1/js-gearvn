import { pageMain , $, $$, $$$ } from '../../store/index.js';
// --------------sau khi k·∫øt th√∫c cu·ªôc tr√≤ truy·ªán th√¨ hi·ªán l√™n ƒë√°nh gi√°-----------------
// .evaluate-chat__star ph·∫£i c√≥ css flex-direction: row-reverse; th√¨ khi hover m·ªõi ch·∫°y theo chi·ªÅu t·ª´ tr√°i sang ph·∫£i
// const stars = $$(".evaluate-star");
const defaultRatingIndex = 0;
let currentRatingIndex = 0;
let isActive = true;
// tk n√†y d√πng ƒë·ªÉ check xem ƒë√£ click ch∆∞a ƒë·ªÉ k√≠ch ho·∫°t s·ª± ki·ªán mouseover g·ªçi ra ratings, n·∫øu ch∆∞a click th√¨ ch·ªâ c√≥ hover cho c√≥ ch·ª© ch∆∞a ƒë√°nh gi√°
let isClicked = false;
const ratings = [
    { emoji: "‚ú®", name: "Th·∫•t v·ªçng" },
    { emoji: "üòî", name: "T·ªá" },
    { emoji: "üôÅ", name: "B√¨nh th∆∞·ªùng" },
    { emoji: "üôÇ", name: "Vui" },
    { emoji: "ü§©", name: "Tuy·ªát v·ªùi" },
];
const reversedRatings = ratings.reverse();
const checkSelectedStar = (star) => {
    if (parseInt(star.getAttribute("data-rate")) === currentRatingIndex) {
        return true;
    } else {
        return false;
    }
};
const setRating = (index) => {
    $$(".evaluate-star").forEach((star) => star.classList.remove("selected"));
    // console.log(index); // m·ªói l·∫ßn mouseout ra ngo√†i ph·∫ßn t·ª≠ th√¨ s·∫Ω nh·∫≠n index = 0 n√™n ph·∫£i ƒë·∫∑t ƒëi·ªÅu ki·ªán if ·ªü ƒë√¢y
    if (index > 0 && index <= $$(".evaluate-star").length) {
        // console.log(index, index > 0);
        document.querySelector('[data-rate="' + index + '"]').classList.add("selected");
        // console.log(document.querySelector('[data-rate="2"]')); // nh·∫≠n 1 th·∫ª element t∆∞∆°ng ƒë∆∞∆°ng v·ªõi data-rate="index";
    }
};
// ph·∫ßn ƒë·ªÉ reset l·∫°i to√†n b·ªô ng√¥i sao
const resetRating = () => {
    currentRatingIndex = defaultRatingIndex;
    setRating(defaultRatingIndex);
};
$$(".evaluate-star").forEach((star, indexElm) => {
    star.addEventListener("click", function () {
        isClicked = true;
        // checkSelectedStar(star) n·∫øu m√† b·∫±ng 0 th√¨ s·∫Ω x√≥a selected
        // if (checkSelectedStar(star)) {
        //     // d√πng c·ªù ƒë·ªÉ check xem n·∫øu ƒë√∫ng th√¨ th√™m selected n·∫øu sai th√¨ kh√¥ng th√™m n·ªØa
        //     if(isActive) {
        //         // resetRating();
        //     }
        //     isActive = false;
        //     return;
        // }
        const index = parseInt(star.getAttribute("data-rate"));
        currentRatingIndex = index;
        setRating(index);

        $$(".evaluate-star").forEach(items => {
            items.classList.remove('active');
        })
        $$(".evaluate-star")[indexElm].classList.add('active');
        // click v√†o th√¨ hi·ªán emoji ƒë√°nh gi√°
        $('.ratings-name').innerText = reversedRatings[indexElm].name;
    });

    star.addEventListener("mouseover", function () {
        const index = parseInt(star.getAttribute("data-rate"));
        setRating(index);
        if(isClicked) {
            // click v√†o th√¨ hi·ªán emoji ƒë√°nh gi√°
            $('.ratings-name').innerText = reversedRatings[indexElm].name;
        }
        $$(".evaluate-star").forEach(items => {
            items.classList.remove('active');
        })
    });

    star.addEventListener("mouseout", function () {
        setRating(currentRatingIndex);
    });
    document.addEventListener("DOMContentLoaded", function () {
        setRating(defaultRatingIndex);
    });
});

function hideEvaluateChat() {
    $('.evaluate-chat').classList.remove('active');
}
// click v√†o h·ªßy b·ªè hover-sendAndSkip
// click v√†o b·ªè qua th√¨ s·∫Ω x√≥a active ƒë·ªÉ hi·ªán l√™n ph·∫ßn g·ª≠i tin nh·∫Øn
$('.hover-sendAndSkip').addEventListener('click', hideEvaluateChat);
$('.evaluate-chat__skip').addEventListener('click', hideEvaluateChat);
// ---------------k·∫øt th√∫c----------------

// ---------------sau khi nh√¢n vi√™n nh·∫≠n tin nh·∫Øn th√¨ s·∫Ω hi·ªán l√™n icon-like, kh√∫c n√†y l√†m ng√¥i sao ƒë√°nh gi√°----------------

// ---------------k·∫øt th√∫c----------------
export default ratings;